{"version":3,"sources":["components/Signin.jsx","components/Signup.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","withCredentials","Signin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSigninSubmit","e","preventDefault","post","concat","config","backendUrl","method","data","username","state","password","then","result","console","log","props","logInHandler","catch","err","handleOnChange","objectData","target","name","value","setState","react_default","a","createElement","className","onSubmit","onChange","type","placeholder","placholder","Link","to","Component","Signup","handleSubmit","firstname","lastname","Search","handleChange","_e$target","defineProperty","input","search","isLoggedIn","handleCommentSubmit","filmId","comment","newMovies","movies","map","elem","title","_this2","error","_this3","showFilm","filter","moviesNameToLowerCase","toLowerCase","searchName","includes","oneFilm","director","year","duration","comments","oneComment","author","_id","onClick","App","BrowserRouter","Route","exact","path","render","src_components_Signin","component","components_Search","assign","Redirect","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07f4392b.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link, Redirect } from 'react-router-dom';\nimport './Signin.css';\nimport config from \"../config.json\"\n\n\naxios.defaults.withCredentials = true;\nclass Signin extends Component {\n    constructor(){\n        super()\n        this.state = { \n            username: '',\n            password: '',\n           \n        }\n\n    }\n    handleSigninSubmit = (e) => {\n            \n        e.preventDefault();\n     \n        axios.post(`${config.backendUrl}/Signin`, \n        {   \n            withCredentials: true,\n            method: 'post',\n            data: {\n                username: this.state.username,\n                password: this.state.password,\n            }\n        })\n        .then((result)=> { \n          \n            console.log(result)\n            this.props.logInHandler()\n        })\n        .catch((err)=>{\n          \n            console.log(err)\n        })\n        \n    }\n\n \n\n    handleOnChange = (e) => {\n        var objectData = {}\n        objectData[e.target.name] = e.target.value\n        this.setState(objectData)\n        \n    }\n\n render() {\n    return ( \n          <div className=\"register\">\n             <h3>Sign in </h3>\n                 <form onSubmit={this.handleSigninSubmit}>\n                     <input className= \"user\" onChange={this.handleOnChange} name=\"username\" type=\"text\" placeholder=\"username\"/>\n                     <input className= \"pass\" onChange={this.handleOnChange} name=\"password\"  type=\"password\" placholder=\"password\"/>\n                     <input className= \"usersub\" type=\"submit\" value='submit'/>\n                 </form>\n                 <p>Or <Link to=\"/Signup\">register</Link></p>\n          </div> \n        )\n\n    }\n}\n\nexport default Signin","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport config from \"../config.json\"\n\nclass Signup extends Component {\n        constructor(){\n            super()\n            this.state = { \n                username: '',\n                password: '',\n                firstname: '',\n                lastname:''\n            }\n        }\n\n    handleSubmit = (e) => {     \n        e.preventDefault();\n        axios.post(`${config.backendUrl}/Signin`,  \n        {withCredentials: true,\n         method: 'post',\n         data: {username: this.state.username,\n                password: this.state.password,\n                firstname: this.state.firstname,\n                lastname: this.state.lastname\n            }\n        }) \n        .then((result)=> {    \n        })\n        .catch((err)=>{\n          })    \n    }\n\n\n    handleOnChange = (e) => {\n        //debugger\n        var objectData = {}\n        objectData[e.target.name] = e.target.value\n        //debugger\n        this.setState(objectData)\n        // debugger\n    }\n    render() {\n        return(\n            <div className=\"m\">\n                 <h3>Sign up</h3>\n                 <form onSubmit={this.handleSubmit}>\n                    <input className= \"fn\" onChange={this.handleOnChange} name=\"firstname\" type=\"text\" placeholder=\"first-name\"/>\n                    <input className= \"ln\"onChange={this.handleOnChange} name=\"lastname\"  type=\"text\" placholder=\"last-name\"/> <br/>\n                    <input className= \"un\"onChange={this.handleOnChange} name=\"username\" type=\"text\" placeholder=\"username\"/>\n                    <input className= \"pw\"onChange={this.handleOnChange} name=\"password\"  type=\"password\" placholder=\"password\"/>\n                    <input className= \"btnn\" type=\"submit\" value='submit'/>\n                </form>\n            </div>\n        )\n    }\n}\n\n// return <p><Link to=\"/Signin\">Sign-in</Link></p> \n\nexport default Signup\n\n\n// how do i render a new page if log in and signup  is successful","import React, { Component } from 'react';\nimport axios from \"axios\"\n// import Signin from \"./Signin\"\n import { Link } from 'react-router-dom';\n import config from \"../config.json\"\n\nclass Search extends Component {\n\n    constructor(props){\n      super(props)\n       this.state = { \n         movies: [],\n         search: \"\",\n         input: \"\",\n         comment:\"\"\n        }\n    }\n    // question why do we have comments as stage on search and search?\n\n  componentDidMount() {\n    \n    axios.post(`${config.backendUrl}/Search`,  {withCredentials: true})\n     .then(result => {\n      \n       // console.log(\"dfdfd\", result)\n       this.setState({movies: result.data.movies}, () =>{\n        \n         debugger\n       })\n     })  \n     .catch((error)=> {\n      \n       console.log(error)\n     })\n  }\n\n\n    handleChange = (e)=> {\n        let {name, value}  = e.target\n\n        this.setState({[name]: value})  // this helps you target the click target to search\n        \n      }\n       \n      handleSubmit = (e)=> {\n        \n        var input = this.state.input\n        \n        this.setState({search: input})\n      }\n\n      logInHandler = (e)=> {\n        this.setState({isLoggedIn: true})\n      }\n      \n\n      handleCommentSubmit = (filmId, e)=>{\n        e.preventDefault();\n        console.log(filmId)\n        let data = {\n            filmId:filmId,\n            comment:this.state.comment   // Retrieving filmID data.\n        }\n    \n        axios.post(`${config.backendUrl}/Comments`,data).then(result =>{\n          console.log(\"He\", result)\n          let newMovies = this.state.movies.map(elem =>{\n            if(elem.title == result.data.result.title){\n              return elem = result.data.result;\n            }\n            return elem;\n          })\n\n          this.setState({movies:newMovies})\n          \n        }).catch(err => console.log(err)) \n        \n       \n      }\n\n  render() {\n     // debugger\n     console.log(this.state)\n    if(this.props.isLoggedIn) {\n        var allMoviesSearch  = this.state.movies.filter( (movies) => {\n        let moviesNameToLowerCase = movies.title.toLowerCase();\n        let searchName = this.state.search.toLowerCase();\n        return (moviesNameToLowerCase.includes(searchName))\n        })\n    \n        var  showFilm = allMoviesSearch.map( oneFilm => {\n        \n            return( \n              <div className = \"movielist\">\n                <ul>\n                    <li>Movie title:{oneFilm.title}</li>\n                    <li>Movie director:{oneFilm.director}</li>\n                    <li>Movie year:{oneFilm.year}</li>\n                    <li>Movie duration:{oneFilm.duration}</li>\n                    <li>Comments: {oneFilm.comments.map(oneComment =>{\n                      return(<span>\n                        <span>By: {oneComment.author} </span>\n                        <span>Comment: {oneComment.comment}</span>\n                      </span>)\n                    })}</li>\n                </ul>\n                <form onSubmit={e =>{this.handleCommentSubmit(oneFilm._id, e)}}>  \n                  <input className = \"movielistipt\" type=\"text\" placeholder=\"leave a comment\" name=\"comment\" onChange={this.handleChange}/>\n                  <button type=\"submit\">Comment</button>\n                </form>\n                </div>\n            )\n        })\n\n        return (\n            <div>\n                <div>\n                  <p>Search Movies</p>\n                    <input className = \"moviesearchinp\" type=\"text\" name=\"input\" onChange={this.handleChange} ></input>\n                    <button className = \"moviesearchbtn\"  onClick={this.handleSubmit} value=\"Submit\"></button>   \n                </div>\n            {this.state.search === \"\" ? <div></div>: <div>{showFilm} </div>}\n            </div>\n        )\n    } else {\n       // debugger\n        return <p><Link to=\"/Signin\">Sign-in</Link></p> \n        \n    }\n  }    \n} \n\n\nexport default Search;\n    ","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Signin from \"./components/Signin.jsx\";\nimport Signup from \"./components/Signup.jsx\"\nimport Search from \"./components/Search.jsx\"\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\n\n// import Signup from \"./components/Signup.jsx\"\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n     this.state = { \n       isLoggedIn: false,  \n      }\n  }\n\n  logInHandler = (e)=> {\n    // debugger\n    this.setState({isLoggedIn: true})\n  }\n  render(){\n   //  debugger\n    return (\n      <Router>\n       <div>  \n          <Route exact path=\"/\" render={(props)=> <Signin  logInHandler={this.logInHandler}/>} />\n          <Route path=\"/Signup\" component={Signup} />\n          <Route path=\"/Signin\" render={(props)=> <Signin  logInHandler={this.logInHandler}/>} />\n          <Route path=\"/search\" render={props =>< Search {...props} isLoggedIn={this.state.isLoggedIn} />} /> \n          {this.state.isLoggedIn? <Redirect to=\"/search\"/>: <div></div>}\n        </div>\n      </Router>\n\n    )\n  }\n}\n\n\n\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}